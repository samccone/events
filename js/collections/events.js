// Generated by CoffeeScript 1.6.3
(function() {
  var _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  this.FE || (this.FE = {});

  FE.Events = (function(_super) {
    __extends(Events, _super);

    function Events() {
      _ref = Events.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Events.prototype.model = FE.Event;

    Events.prototype.eventsByRange = function(range) {
      var _fauxEvent;
      _fauxEvent = new FE.Event(range);
      return this.filter(function(_event) {
        return _event.overlapsWith(_fauxEvent);
      });
    };

    Events.prototype.eventRanges = function() {
      var groups;
      groups = new FE.Events;
      this.each(function(_event) {
        var inGroup;
        if (groups.length) {
          inGroup = false;
          groups.each(function(group) {
            if (group.overlapsWith(_event)) {
              group.extendToInclude(_event);
              return inGroup = true;
            }
          });
          if (!inGroup) {
            return groups.add(new FE.Event(_event.attributes));
          }
        } else {
          return groups.add(new FE.Event(_event.attributes));
        }
      });
      return groups;
    };

    Events.prototype.grouped = function() {
      var events, i, initalRanges, rangeReduce, _i,
        _this = this;
      events = [];
      rangeReduce = this.eventRanges();
      initalRanges = rangeReduce.length;
      for (i = _i = 0; 0 <= initalRanges ? _i < initalRanges : _i > initalRanges; i = 0 <= initalRanges ? ++_i : --_i) {
        rangeReduce = rangeReduce.eventRanges();
      }
      rangeReduce.each(function(r) {
        return events.push(_this.eventsByRange(r.attributes));
      });
      return events;
    };

    return Events;

  })(Backbone.Collection);

}).call(this);
